{"version":3,"sources":["logo.svg","components/PlayerNameComponent.js","components/InstructionsCalcCardComponent.js","components/GenerateResetResultsComponent.js","components/CoreComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PlayerName","props","Fragment","className","id","playerName","onClick","delPlayerName","InstructionsCard","Card","mb","CardHeader","CardTitle","CardBody","CalcCard","Row","Col","sm","lg","Label","htmlFor","Input","onChange","handleChange","type","name","select","value","InputGroup","autocomplete","placeholder","onKeyPress","keyPressed","InputGroupAddon","addonType","Button","color","handleAddNameClick","class","staticPlayerNames","length","map","GenerateResetResults","CalcButtons","handleGenerate","dynamicPlayerNames","playersPerTeam","handleReset","ResultsCard","createTeamList","isShuffleListShown","md","size","offset","Core","event","setState","target","state","addPlayerName","console","log","alert","key","sendPlayersPerTeam","CardDeck","addName","this","Component","Jumbo","Footer","Main","addNumPlayersPerTeam","newStaticArray","newDynamicArray","indexStatic","indexOf","indexDynamic","splice","shuffleNames","newArrayToShuffle","nameArray","i","j","Math","floor","random","temp","shuffle","scrollToBot","scroller","scrollTo","duration","delay","smooth","scrollToTop","scroll","remainingPlayers","numTeams","allPlayers","teamArray","slice","push","remainingPlayerArr","Container","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f1535ae4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport function PlayerName(props) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"user-input-div\" id=\"user-input-div\">\r\n\t\t\t\t<div className=\"player-item\">\r\n\t\t\t\t\t<h5 className=\"player-name-h5\">{props.playerName}</h5>\r\n\t\t\t\t\t<button className=\"player-btn\" onClick={() => props.delPlayerName(props.playerName)}>\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n\tRow,\r\n\tCol,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardTitle,\r\n\tCardBody,\r\n\tInput,\r\n\tInputGroup,\r\n\tInputGroupAddon,\r\n\tLabel,\r\n\tButton\r\n} from 'reactstrap';\r\nimport { PlayerName } from './PlayerNameComponent';\r\n\r\nexport function InstructionsCard(props) {\r\n\treturn (\r\n\t\t<Card mb={4}>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardTitle mb={0}>\r\n\t\t\t\t\t<h3 className=\"mb-0\">How it works</h3>\r\n\t\t\t\t</CardTitle>\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<div className=\"info-div\">\r\n\t\t\t\t\t<hr className=\"card-hr\" />\r\n\t\t\t\t\t<h5>Divide your party into teams</h5>\r\n\t\t\t\t\t<hr className=\"card-hr\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<ol>\r\n\t\t\t\t\t<li>Enter the number of players allowed per group/team.</li>\r\n\t\t\t\t\t<li>Input player names one at a time.</li>\r\n\t\t\t\t\t<li>Click generate! It's that easy.</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport function CalcCard(props) {\r\n\treturn (\r\n\t\t<Card mb={4}>\r\n\t\t\t<CardHeader>\r\n\t\t\t\t<CardTitle>\r\n\t\t\t\t\t<h3 className=\"mb-0\">Generator</h3>\r\n\t\t\t\t</CardTitle>\r\n\t\t\t</CardHeader>\r\n\t\t\t<CardBody className=\"px-4\">\r\n\t\t\t\t<hr className=\"card-hr mb-4\" />\r\n\t\t\t\t<Row className=\"players-per-team-div\">\r\n\t\t\t\t\t<Col sm={'12'} lg={'6'} className=\"players-per-team-label\">\r\n\t\t\t\t\t\t<Label htmlFor=\"numPerTeamDropDown\">\r\n\t\t\t\t\t\t\t<h5>Players Per Team</h5>\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm=\"12\" lg=\"6\" className=\"players-per-team-select mx-auto\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={props.handleChange}\r\n\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\tname=\"playersPerTeam\"\r\n\t\t\t\t\t\t\tid=\"numPerTeamDropDown\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option select=\"selected\">Select</option>\r\n\t\t\t\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"playerName\"\r\n\t\t\t\t\t\t\t\tid=\"nameInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Add a Player\"\r\n\t\t\t\t\t\t\t\tonChange={props.handleChange}\r\n\t\t\t\t\t\t\t\tonKeyPress={props.keyPressed}\r\n\t\t\t\t\t\t\t\tvalue={props.playerName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<InputGroupAddon addonType=\"append\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"info\"\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tname=\"addPlayer\"\r\n\t\t\t\t\t\t\t\t\tid=\"addPlayerBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={props.handleAddNameClick}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i class=\"fas fa-plus\" />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"text-center\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<div class=\"info-div\">\r\n\t\t\t\t\t\t\t<hr className=\"card-hr mt-4\" />\r\n\t\t\t\t\t\t\t<h5 class=\"\">Players</h5>\r\n\t\t\t\t\t\t\t<hr className=\"card-hr\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"user-input-div\" id=\"user-input-div\">\r\n\t\t\t\t\t\t\t{props.staticPlayerNames.length ? (\r\n\t\t\t\t\t\t\t\tprops.staticPlayerNames.map((playerName) => {\r\n\t\t\t\t\t\t\t\t\treturn <PlayerName playerName={playerName} delPlayerName={props.delPlayerName} />;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h6 class=\"text-muted\">Player names will appear here...</h6>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Card, CardHeader, CardTitle, CardBody, Button } from 'reactstrap';\r\n\r\nexport function GenerateResetResults(props) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CalcButtons\r\n\t\t\t\thandleGenerate={props.handleGenerate}\r\n\t\t\t\tdynamicPlayerNames={props.dynamicPlayerNames}\r\n\t\t\t\tplayersPerTeam={props.playersPerTeam}\r\n\t\t\t\thandleReset={props.handleReset}\r\n\t\t\t/>\r\n\t\t\t<ResultsCard\r\n\t\t\t\tid=\"resultsCard\"\r\n\t\t\t\tname=\"resultsCard\"\r\n\t\t\t\tcreateTeamList={props.createTeamList}\r\n\t\t\t\tisShuffleListShown={props.isShuffleListShown}\r\n\t\t\t\tdynamicPlayerNames={props.dynamicPlayerNames}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport function CalcButtons(props) {\r\n\treturn (\r\n\t\t<div className=\"hr-button-div\">\r\n\t\t\t<hr />\r\n\t\t\t<div class=\"program-button-div\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"info\"\r\n\t\t\t\t\tclassName=\"btn btn-lg generate-button mr-2\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tname=\"submitBtn\"\r\n\t\t\t\t\tid=\"submitBtn\"\r\n\t\t\t\t\tonClick={props.handleGenerate}\r\n\t\t\t\t>\r\n\t\t\t\t\tGenerate Teams\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\tclassName=\"btn btn-lg reset-button\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tname=\"resetBtn\"\r\n\t\t\t\t\tid=\"resetBtn\"\r\n\t\t\t\t\tonClick={props.handleReset}\r\n\t\t\t\t>\r\n\t\t\t\t\tReset\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function ResultsCard(props) {\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col md={{ size: 6, offset: 3 }}>\r\n\t\t\t\t<Card className=\"result-card\">\r\n\t\t\t\t\t<CardHeader>\r\n\t\t\t\t\t\t<CardTitle>\r\n\t\t\t\t\t\t\t<h3 className=\"mb-0\">Generated Teams</h3>\r\n\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t<CardBody className=\"result-div\">\r\n\t\t\t\t\t\t{props.isShuffleListShown && props.dynamicPlayerNames.length ? (\r\n\t\t\t\t\t\t\tprops.createTeamList()\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<h6 class=\"text-muted\">Player names will appear here...</h6>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n}\r\n\r\nexport default GenerateResetResults;\r\n","import React, { Component } from 'react';\r\nimport { CardDeck } from 'reactstrap';\r\nimport { InstructionsCard, CalcCard } from './InstructionsCalcCardComponent';\r\nimport { GenerateResetResults } from './GenerateResetResultsComponent';\r\n\r\nexport class Core extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayerName     : '',\r\n\t\t\tplayersPerTeam : ''\r\n\t\t};\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleAddNameClick = () => {\r\n\t\tif (this.state.playerName) {\r\n\t\t\tthis.props.addPlayerName(this.state.playerName);\r\n\t\t\tthis.setState({ playerName: '' });\r\n\t\t\tconsole.log('playaaaanameeee: ', this.state.playerName);\r\n\t\t} else {\r\n\t\t\talert('Please enter a player name.');\r\n\t\t}\r\n\t};\r\n\r\n\tkeyPressed = (event) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tthis.handleAddNameClick();\r\n\t\t\tevent.target.value = '';\r\n\t\t}\r\n\t};\r\n\r\n\tsendPlayersPerTeam = () => {\r\n\t\tthis.props.handleGenerate(+this.state.playersPerTeam);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<CardDeck>\r\n\t\t\t\t\t<InstructionsCard />\r\n\t\t\t\t\t<CalcCard\r\n\t\t\t\t\t\taddName={this.props.addPlayerName}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\thandleAddNameClick={this.handleAddNameClick}\r\n\t\t\t\t\t\tstaticPlayerNames={this.props.staticPlayerNames}\r\n\t\t\t\t\t\tdynamicPlayerNames={this.props.dynamicPlayerNames}\r\n\t\t\t\t\t\tplayersPerTeam={+this.state.playersPerTeam}\r\n\t\t\t\t\t\tkeyPressed={this.keyPressed}\r\n\t\t\t\t\t\tplayerName={this.state.playerName}\r\n\t\t\t\t\t\tdelPlayerName={this.props.delPlayerName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</CardDeck>\r\n\t\t\t\t<GenerateResetResults\r\n\t\t\t\t\thandleGenerate={this.sendPlayersPerTeam}\r\n\t\t\t\t\tcreateTeamList={this.props.createTeamList}\r\n\t\t\t\t\tisShuffleListShown={this.props.isShuffleListShown}\r\n\t\t\t\t\tplayersPerTeam={+this.state.playersPerTeam}\r\n\t\t\t\t\thandleReset={this.props.handleReset}\r\n\t\t\t\t\tdynamicPlayerNames={this.props.dynamicPlayerNames}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Core;\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { animateScroll as scroll, scroller } from 'react-scroll';\r\nimport { Core } from './CoreComponent';\r\n\r\n///TO DO\r\n//react-scroll working\r\n//Refactor code into other files\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayersPerTeam     : '',\r\n\t\t\tdynamicPlayerNames : [],\r\n\t\t\tstaticPlayerNames  : [],\r\n\t\t\tisShuffleListShown : false\r\n\t\t};\r\n\t}\r\n\r\n\taddPlayerName = (playerName) => {\r\n\t\tthis.setState({\r\n\t\t\tdynamicPlayerNames : [ ...this.state.dynamicPlayerNames, playerName ],\r\n\t\t\tstaticPlayerNames  : [ ...this.state.staticPlayerNames, playerName ]\r\n\t\t});\r\n\t};\r\n\r\n\taddNumPlayersPerTeam = (playersPerTeam) => {\r\n\t\tthis.setState({ playersPerTeam: playersPerTeam });\r\n\t};\r\n\r\n\tdelPlayerName = (playerName) => {\r\n\t\tconst newStaticArray = [ ...this.state.staticPlayerNames ];\r\n\t\tconst newDynamicArray = [ ...this.state.dynamicPlayerNames ];\r\n\t\tlet indexStatic = this.state.staticPlayerNames.indexOf(playerName);\r\n\t\tlet indexDynamic = this.state.dynamicPlayerNames.indexOf(playerName);\r\n\t\tnewStaticArray.splice(indexStatic, 1);\r\n\t\tnewDynamicArray.splice(indexDynamic, 1);\r\n\t\tif (indexStatic > -1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tstaticPlayerNames : newStaticArray\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (indexDynamic > -1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdynamicPlayerNames : newDynamicArray\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// \tconst filterOutName = (nameArray) => {\r\n\t\t// \t\tnameArray.filter((name) => {\r\n\t\t// \t\t\tname === playerName;\r\n\t\t// \t\t});\r\n\t\t// \t};\r\n\t\t// \tthis.setState({\r\n\t\t// \t\t...this.state,\r\n\t\t// \t\tdynamicPlayerNames : filterOutName(this.state.dynamicPlayerNames),\r\n\t\t// \t\tstaticPlayerNames  : filterOutName(this.state.staticPlayerNames)\r\n\t\t// \t});\r\n\t\t// };\r\n\t};\r\n\r\n\tshuffleNames = () => {\r\n\t\tconst newArrayToShuffle = [ ...this.state.staticPlayerNames ];\r\n\t\tconst shuffle = (nameArray) => {\r\n\t\t\tfor (let i = nameArray.length - 1; i > 0; i--) {\r\n\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\tlet temp = nameArray[j];\r\n\t\t\t\tnameArray[j] = nameArray[i];\r\n\t\t\t\tnameArray[i] = temp;\r\n\t\t\t}\r\n\t\t\treturn nameArray;\r\n\t\t};\r\n\t\tthis.setState({ dynamicPlayerNames: shuffle(newArrayToShuffle) });\r\n\t};\r\n\r\n\tscrollToBot = () => {\r\n\t\tscroller.scrollTo('footer', {\r\n\t\t\tduration : 4000,\r\n\t\t\tdelay    : 0,\r\n\t\t\tsmooth   : 'easeOutCubic'\r\n\t\t});\r\n\t};\r\n\r\n\tscrollToTop = () => {\r\n\t\tscroll.scrollToTop({\r\n\t\t\tduration : 2000,\r\n\t\t\tdelay    : 0,\r\n\t\t\tsmooth   : 'easeOutCubic'\r\n\t\t});\r\n\t};\r\n\r\n\thandleGenerate = (playersPerTeam) => {\r\n\t\tif (playersPerTeam) {\r\n\t\t\tthis.scrollToBot();\r\n\t\t\tthis.shuffleNames();\r\n\t\t\tthis.setState({\r\n\t\t\t\tplayersPerTeam     : playersPerTeam,\r\n\t\t\t\tisShuffleListShown : true\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert('Please select the number of players per team.');\r\n\t\t}\r\n\t};\r\n\r\n\thandleReset = () => {\r\n\t\tthis.scrollToTop();\r\n\t\tthis.setState({\r\n\t\t\tplayersPerTeam     : '',\r\n\t\t\tdynamicPlayerNames : [],\r\n\t\t\tstaticPlayerNames  : [],\r\n\t\t\tisShuffleListShown : false\r\n\t\t});\r\n\t};\r\n\r\n\tcreateTeamList = () => {\r\n\t\tconst { playersPerTeam, dynamicPlayerNames } = this.state;\r\n\r\n\t\tconst remainingPlayers = dynamicPlayerNames.length % playersPerTeam;\r\n\t\tconst numTeams = Math.floor(dynamicPlayerNames.length / playersPerTeam);\r\n\t\t//outer loop to create parent\r\n\t\tlet j = 0;\r\n\t\tconst allPlayers = [];\r\n\t\tfor (let i = 0; i < numTeams; i++) {\r\n\t\t\tconst teamArray = dynamicPlayerNames.slice(j, j + playersPerTeam);\r\n\t\t\tconsole.log('numteams:', numTeams);\r\n\t\t\tconsole.log('j, your inverval', j);\r\n\t\t\tallPlayers.push(\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h5 class=\"team-title\">Team {i + 1}</h5>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{teamArray.map((name) => {\r\n\t\t\t\t\t\t\tconsole.log(name);\r\n\t\t\t\t\t\t\treturn <li class=\"player-result-list\">{name}</li>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tj += playersPerTeam;\r\n\t\t}\r\n\t\tconst remainingPlayerArr = dynamicPlayerNames.slice(remainingPlayers * -1);\r\n\t\tif (remainingPlayers === 0) {\r\n\t\t\treturn allPlayers;\r\n\t\t} else if (remainingPlayers === 1) {\r\n\t\t\tallPlayers.push(\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h5 class=\"team-title\">Round Robin Player</h5>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li class=\"player-result-list\">{remainingPlayerArr[0]}</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\treturn allPlayers;\r\n\t\t} else {\r\n\t\t\tallPlayers.push(\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<h5 class=\"team-title\">Round Robin Players</h5>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{remainingPlayerArr.map((name) => {\r\n\t\t\t\t\t\t\tconsole.log(name);\r\n\t\t\t\t\t\t\treturn <li class=\"player-result-list\">{name}</li>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\treturn allPlayers;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Jumbo />\r\n\t\t\t\t\t<Core\r\n\t\t\t\t\t\taddPlayerName={this.addPlayerName}\r\n\t\t\t\t\t\taddNumPlayersPerTeam={this.addNumPlayersPerTeam}\r\n\t\t\t\t\t\tcreateTeamList={this.createTeamList}\r\n\t\t\t\t\t\tplayersPerTeam={this.state.playersPerTeam}\r\n\t\t\t\t\t\tdynamicPlayerNames={this.state.dynamicPlayerNames}\r\n\t\t\t\t\t\tstaticPlayerNames={this.state.staticPlayerNames}\r\n\t\t\t\t\t\thandleGenerate={this.handleGenerate}\r\n\t\t\t\t\t\tisShuffleListShown={this.state.isShuffleListShown}\r\n\t\t\t\t\t\tdelPlayerName={this.delPlayerName}\r\n\t\t\t\t\t\thandleReset={this.handleReset}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Footer name=\"footer\" />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport function Jumbo(props) {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div className=\"my-jumbo\">\r\n\t\t\t<h1 className=\"page-title\">Multiplayer Team Generator</h1>\r\n\t\t\t<div className=\"subtitle-div\">\r\n\t\t\t\t<div className=\"title-decoration\" />\r\n\t\t\t\t<h4 className=\"subtitle\">Shake things up.</h4>\r\n\t\t\t\t<div className=\"title-decoration\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function Footer(props) {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<p className=\"credit-text\">&copy; 2020 Brendan Roman</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Main />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}